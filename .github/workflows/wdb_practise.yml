name: excercise-wandb

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  ghapi-exercise:
    # Trigger only if the comment contains "/wandb" and is associated with a pull request
    if: (github.event.issue.pull_request != null) && contains(github.event.comment.body, '/wandb')
    runs-on: ubuntu-latest
    steps:

    - name: Get repo contents
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        pip install "wandb[workspaces]" ghapi

    - name: Parse value from the command
      id: get-runid-value
      shell: python
      run: |
        import re, os
        comment = os.getenv('PR_COMMENT', '')
        match = re.search('/wandb[\s+](\S+)', comment)

        with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
          if match:
            print(f'VAL_FOUND=true', file=f)
            print(f'RUN_ID={match.group(1)}', file=f)
          else:
            print(f'VAL_FOUND=false', file=f)
      env:
        PR_COMMENT: ${{ github.event.comment.body }}

    - name: Fetch comparison data and generate report
      if: steps.get-runid-value.outputs.VAL_FOUND == 'true'
      id: wandb-report
      run: |
        import os
        import wandb
        import json

        # Set the environment variables
        entity = "sarah_s96-university-of-british-columbia"
        project = "lineage-example"
        baseline_run_id = "0fkx3a7z"  # You can update this to another baseline run ID if needed
        run_id = "${{ steps.get-runid-value.outputs.RUN_ID }}"
        wandb_api_key = os.getenv('WANDB_API_KEY')

        # Initialize wandb API
        wandb.login(key=wandb_api_key)
        api = wandb.Api()

        # Fetch the baseline and the run
        baseline = api.run(f"{entity}/{project}/{baseline_run_id}")
        run = api.run(f"{entity}/{project}/{run_id}")

        # Generate a comparison report (simplified version)
        comparison = {
            "run_id": run_id,
            "baseline_run_id": baseline_run_id,
            "comparison_report": {
                "run_name": run.name,
                "baseline_name": baseline.name,
                "metrics_comparison": {}  # You can add actual metrics comparison logic here
            }
        }

        # Save the comparison as a JSON file or string
        comparison_json = json.dumps(comparison, indent=4)

        # Save the report URL (replace this logic as needed)
        report_url = f"https://wandb.ai/{entity}/{project}/runs/{run_id}/comparison?baseline_run_id={baseline_run_id}"

        # Output the result to GitHub Actions
        with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
          print(f'REPORT_URL={report_url}', file=f)
      
      env:
        WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

    - name: Make a comment with the GitHub API
      uses: actions/github-script@v6
      if: steps.wandb-report.outcome == 'success'
      with:
        script: |
           var msg = `A comparison between the linked run and baseline is available [in this report](${process.env.REPORT_URL})`
           github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: msg
            });
      env:
        REPORT_URL: "${{ steps.wandb-report.outputs.REPORT_URL }}"

    - name: Advanced- label the PR
      uses: actions/github-script@v6
      if: steps.wandb-report.outcome == 'success'
      with:
        github-token: ${{ secrets.MY_PAT }}
        script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["experiment-linked"]
             });
